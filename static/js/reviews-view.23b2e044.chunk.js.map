{"version":3,"file":"static/js/reviews-view.23b2e044.chunk.js","mappings":"4TAEAA,IAAAA,SAAAA,QAAyB,+BACzBA,IAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAqB,mCAAG,WAAMC,GAAN,yFACZH,IAAAA,IAAU,sBAAuB,CACtDI,OAAQ,CAAED,KAAAA,KAFuB,uBAC3BE,EAD2B,EAC3BA,KAD2B,kBAK5BA,GAL4B,2CAAH,sDAQrBC,EAAiB,mCAAG,WAAOH,EAAMI,GAAb,yFACRP,IAAAA,IAAU,gBAAiB,CAChDI,OAAQ,CAAED,KAAAA,EAAMI,MAAAA,KAFa,uBACvBF,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,wDAQjBG,EAAiB,mCAAG,WAAMC,GAAN,uFACRT,IAAAA,IAAA,iBAAoBS,IADZ,cACzBC,EADyB,yBAGxBA,GAHwB,2CAAH,sDAMjBC,EAAc,mCAAG,WAAMF,GAAN,yFACLT,IAAAA,IAAA,iBAAoBS,EAApB,aADK,uBACpBJ,EADoB,EACpBA,KADoB,kBAGrBA,GAHqB,2CAAH,sDAMdO,EAAgB,mCAAG,WAAOH,EAAUN,GAAjB,yFACPH,IAAAA,IAAA,iBAAoBS,EAApB,YAAwC,CAC7DL,OAAQ,CAAED,KAAAA,KAFkB,uBACtBE,EADsB,EACtBA,KADsB,kBAKvBA,GALuB,2CAAH,yD,2IClC7B,EAA0B,6B,SCMX,SAASQ,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACHL,EAAQM,SAEb,iBAAC,gHAE6BR,EAAAA,EAAAA,IAAiBE,GAF9C,iBAEWO,EAFX,EAEWA,UAENH,EAAWG,GAJhB,gDAOGC,QAAQC,MAAM,KAAMC,SAPvB,wDAAD,KAUC,CAACV,KAGF,gCACGG,IACC,wBACGA,EAAQQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,QAAP,OACX,wBAAcA,GAALD,QAKK,IAAnBT,EAAQW,SACP,cAAGC,UAAWC,EAAd","sources":["API/fetchMovieInformation.js","webpack://goit-react-hw-05-movies/./src/views/ReviewsView/ReviewsView.module.css?9a8a","views/ReviewsView/ReviewsView.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '9cd9c5b7e8e826e5ef2c1aca08004ce5',\n};\n\nexport const fetchTrendingMovieDay = async page => {\n  const { data } = await axios.get('/trending/movie/day', {\n    params: { page },\n  });\n\n  return data;\n};\n\nexport const fetchMovieByTitle = async (page, query) => {\n  const { data } = await axios.get('/search/movie', {\n    params: { page, query },\n  });\n\n  return data;\n};\n\nexport const fetchMovieDetails = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}`);\n\n  return response;\n};\n\nexport const fetchMovieCast = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}/credits`);\n\n  return data;\n};\n\nexport const fetchMovieReview = async (movie_id, page) => {\n  const { data } = await axios.get(`/movie/${movie_id}/reviews`, {\n    params: { page },\n  });\n\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"ReviewsView_message__Qhmxf\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchMovieReview } from '../../API/fetchMovieInformation';\n\nimport s from './ReviewsView.module.css';\n\nexport default function ReviewsView() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    if (!movieId.trim()) return;\n\n    (async function () {\n      try {\n        const { results } = await fetchMovieReview(movieId);\n        if (results) {\n          setReviews(results);\n        }\n      } catch (error) {\n        console.error(error.message);\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews && (\n        <ul>\n          {reviews.map(({ id, content }) => (\n            <li key={id}>{content}</li>\n          ))}\n        </ul>\n      )}\n\n      {reviews.length === 0 && (\n        <p className={s.message}>\n          Your REVIEW for this movie could be the first:)\n        </p>\n      )}\n    </>\n  );\n}\n"],"names":["axios","api_key","fetchTrendingMovieDay","page","params","data","fetchMovieByTitle","query","fetchMovieDetails","movie_id","response","fetchMovieCast","fetchMovieReview","ReviewsView","movieId","useParams","useState","reviews","setReviews","useEffect","trim","results","console","error","message","map","id","content","length","className","s"],"sourceRoot":""}