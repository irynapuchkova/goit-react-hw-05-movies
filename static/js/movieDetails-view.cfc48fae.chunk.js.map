{"version":3,"file":"static/js/movieDetails-view.cfc48fae.chunk.js","mappings":"4TAEAA,IAAAA,SAAAA,QAAyB,+BACzBA,IAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAqB,mCAAG,WAAMC,GAAN,yFACZH,IAAAA,IAAU,sBAAuB,CACtDI,OAAQ,CAAED,KAAAA,KAFuB,uBAC3BE,EAD2B,EAC3BA,KAD2B,kBAK5BA,GAL4B,2CAAH,sDAQrBC,EAAiB,mCAAG,WAAOH,EAAMI,GAAb,yFACRP,IAAAA,IAAU,gBAAiB,CAChDI,OAAQ,CAAED,KAAAA,EAAMI,MAAAA,KAFa,uBACvBF,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,wDAQjBG,EAAiB,mCAAG,WAAMC,GAAN,uFACRT,IAAAA,IAAA,iBAAoBS,IADZ,cACzBC,EADyB,yBAGxBA,GAHwB,2CAAH,sDAMjBC,EAAc,mCAAG,WAAMF,GAAN,yFACLT,IAAAA,IAAA,iBAAoBS,EAApB,aADK,uBACpBJ,EADoB,EACpBA,KADoB,kBAGrBA,GAHqB,2CAAH,sDAMdO,EAAgB,mCAAG,WAAOH,EAAUN,GAAjB,yFACPH,IAAAA,IAAA,iBAAoBS,EAApB,YAAwC,CAC7DL,OAAQ,CAAED,KAAAA,KAFkB,uBACtBE,EADsB,EACtBA,KADsB,kBAKvBA,GALuB,2CAAH,yD,+JClC7B,EAA6B,qCAA7B,EAAyE,+BAAzE,EAAiH,8DAAjH,EAA6L,sCAA7L,EAA2O,gCAA3O,EAAmR,gCAAnR,EAA+T,oC,SCazTQ,EAAY,SAAC,GAAD,SAAGC,SAA2BC,EAAWA,GAE5C,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAqBA,OAbAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,gHAE0BlB,EAAAA,EAAAA,IAAkBa,GAF5C,iBAEWhB,EAFX,EAEWA,OAENoB,EAASpB,GAJd,gDAOGsB,QAAQC,MAAM,KAAMC,SAPvB,wDAAD,KAUC,CAACR,KAGF,iCACE,mBAAQS,UAAWf,EAAcgB,KAAK,SAASC,QArB5B,WAAO,IAAD,EAC3Bf,EAAS,UAAAE,EAASc,aAAT,SAAgBC,KAAOf,EAASc,MAAMC,KAAO,IAAK,CACzDC,SAAS,KAmBT,yBAGCX,IACC,4BACE,gCACE,gBACEY,IAAG,wCAAmCZ,EAAMa,aAC5CC,QAAS,SAAAC,GACPA,EAAEC,OAAOC,QAAU,KACnBF,EAAEC,OAAOJ,IAAMM,GAEjBC,IAAKnB,EAAMoB,MACXC,QAAQ,UAEV,iBAAKf,UAAWf,EAAhB,WACE,gBAAIe,UAAWf,EAAf,UACGS,EAAMoB,OACP,gCACIpB,EAAMsB,cAAgBtB,EAAMsB,aAAaC,MAAM,EAAG,GADtD,WAIF,yCACA,uBAAIvB,EAAMwB,YACV,oCACU,IACPxB,EAAMyB,QACLzB,EAAMyB,OAAOC,KAAI,SAAAC,GAAK,OACpB,iBAAMrB,UAAWf,EAAjB,SACGoC,EAAMC,MADsBD,EAAME,iBAQ/C,iBAAKvB,UAAWf,EAAhB,WACE,oDACA,4BACE,SAAC,KAAD,CAASuC,GAAE,kBAAajC,EAAb,SAA6BS,UAAWjB,EAAnD,mBAGA,SAAC,KAAD,CAASyC,GAAE,kBAAajC,EAAb,YAAgCS,UAAWjB,EAAtD,4BAMJ,SAAC,KAAD,Y","sources":["API/fetchMovieInformation.js","webpack://goit-react-hw-05-movies/./src/views/MovieDetailsView/MovieDitailsView.module.css?61bf","views/MovieDetailsView/MovieDetailsView.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '9cd9c5b7e8e826e5ef2c1aca08004ce5',\n};\n\nexport const fetchTrendingMovieDay = async page => {\n  const { data } = await axios.get('/trending/movie/day', {\n    params: { page },\n  });\n\n  return data;\n};\n\nexport const fetchMovieByTitle = async (page, query) => {\n  const { data } = await axios.get('/search/movie', {\n    params: { page, query },\n  });\n\n  return data;\n};\n\nexport const fetchMovieDetails = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}`);\n\n  return response;\n};\n\nexport const fetchMovieCast = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}/credits`);\n\n  return data;\n};\n\nexport const fetchMovieReview = async (movie_id, page) => {\n  const { data } = await axios.get(`/movie/${movie_id}/reviews`, {\n    params: { page },\n  });\n\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"backButton\":\"MovieDitailsView_backButton__H3IsL\",\"link\":\"MovieDitailsView_link__BamZw\",\"active\":\"MovieDitailsView_active__ZSS2z MovieDitailsView_link__BamZw\",\"description\":\"MovieDitailsView_description__mgH1r\",\"title\":\"MovieDitailsView_title__U3LEd\",\"genre\":\"MovieDitailsView_genre__jJzaZ\",\"extraInfo\":\"MovieDitailsView_extraInfo__wdZ3H\"};","import { useState, useEffect } from 'react';\nimport {\n  NavLink,\n  useParams,\n  Outlet,\n  useLocation,\n  useNavigate,\n} from 'react-router-dom';\n\nimport { fetchMovieDetails } from '../../API/fetchMovieInformation';\nimport noImage from '../../../src/default_profImg_2.png';\n\nimport s from './MovieDitailsView.module.css';\n\nconst setActive = ({ isActive }) => (isActive ? s.active : s.link);\n\nexport default function MovieDetailsView() {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { movieId } = useParams();\n\n  const [movie, setMovie] = useState([]);\n\n  const onBtnBackClick = () => {\n    navigate(location.state?.from ? location.state.from : '/', {\n      replace: true,\n    });\n  };\n\n  useEffect(() => {\n    (async function () {\n      try {\n        const { data } = await fetchMovieDetails(movieId);\n        if (data) {\n          setMovie(data);\n        }\n      } catch (error) {\n        console.error(error.message);\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <>\n      <button className={s.backButton} type=\"button\" onClick={onBtnBackClick}>\n        Go back ...\n      </button>\n      {movie && (\n        <div>\n          <section>\n            <img\n              src={`http://image.tmdb.org/t/p/w300${movie.poster_path}`}\n              onError={e => {\n                e.target.onerror = null;\n                e.target.src = noImage;\n              }}\n              alt={movie.title}\n              loading=\"lazy\"\n            ></img>\n            <div className={s.description}>\n              <h1 className={s.title}>\n                {movie.title}\n                <span>\n                  ({movie.release_date && movie.release_date.slice(0, 4)})\n                </span>\n              </h1>\n              <h2>Overview : </h2>\n              <p>{movie.overview}</p>\n              <h3>\n                Genres:{' '}\n                {movie.genres &&\n                  movie.genres.map(genre => (\n                    <span className={s.genre} key={genre.id}>\n                      {genre.name}\n                    </span>\n                  ))}\n              </h3>\n            </div>\n          </section>\n\n          <div className={s.extraInfo}>\n            <h4>Additional information</h4>\n            <nav>\n              <NavLink to={`/movies/${movieId}/cast`} className={setActive}>\n                Cast\n              </NavLink>\n              <NavLink to={`/movies/${movieId}/reviews`} className={setActive}>\n                Reviews\n              </NavLink>\n            </nav>\n          </div>\n\n          <Outlet />\n        </div>\n      )}\n    </>\n  );\n}\n"],"names":["axios","api_key","fetchTrendingMovieDay","page","params","data","fetchMovieByTitle","query","fetchMovieDetails","movie_id","response","fetchMovieCast","fetchMovieReview","setActive","isActive","s","MovieDetailsView","navigate","useNavigate","location","useLocation","movieId","useParams","useState","movie","setMovie","useEffect","console","error","message","className","type","onClick","state","from","replace","src","poster_path","onError","e","target","onerror","noImage","alt","title","loading","release_date","slice","overview","genres","map","genre","name","id","to"],"sourceRoot":""}